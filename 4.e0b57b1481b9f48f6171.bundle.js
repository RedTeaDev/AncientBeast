(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{321:function(e,t,a){"use strict";a.r(t);var i=a(120),r=a(24),s=a(48),n=(a(5),a(989));t.default=function(e){e.abilities[33]=[{trigger:"onDamage onStartPhase",_damaged:!1,_targets:[],require:function(){return e.activeCreature!=this.creature?(this._damaged=!0,!1):!!this._damaged&&(this._damaged=!1,this._targets=this.creature.adjacentHexes(1),!(this.isUpgraded()&&!this.atLeastOneTarget(this._targets,{team:r.a.Enemy}))&&this.testRequirements())},activate:function(){var t=this.creature,a=new i.a(t,{sonic:30},this._targets.length,[],e),r=new Set;this._targets.forEach((function(e){void 0===e.creature||r.has(e.creature)||r.add(e.creature)})),this.end(!1,!0),r.forEach((function(e,t,i){e.takeDamage(a)})),this.end(!0,!1)}},{trigger:"onQuery",_executeHealthThreshold:45,_targetTeam:r.a.Enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this._getHexes(),{team:this._targetTeam})},query:function(){var e=this.creature,t=this;this.game.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:e.id,flipped:e.flipped,hexes:this._getHexes()})},activate:function(e){if(this.end(),e.health<=this._executeHealthThreshold){var t=new i.a(this.creature,{pure:e.health},1,[],this.game);this.game.UI.chat.suppressMessage(/is dead/i,1),e.takeDamage(t).kill&&(this.game.log("%CreatureName".concat(e.id,"% has been executed!")),e.hint("Executed","damage"),this.isUpgraded()&&(this.setUsed(!1),this.game.UI.selectAbility(-1)))}else{var a=new i.a(this.creature,{slash:30},1,[],this.game);e.takeDamage(a)}},_getHexes:function(){return this.creature.getHexMap(s.k)}},{trigger:"onQuery",require:function(){return!!this.testRequirements()&&(!!this.creature.stats.moveable||(this.message=e.msg.abilities.notMoveable,!1))},query:function(){var e=this,t=this.creature,a=this.game.grid.getFlyingRange(t.x,t.y,10,t.size,t.id);this.game.grid.queryHexes({fnOnSelect:function(){e._highlightDestination.apply(e,arguments)},fnOnConfirm:function(){e.animation.apply(e,arguments)},size:t.size,flipped:t.player.flipped,id:t.id,hexes:a})},activate:function(t){var a=this;a.end(),a.creature.moveTo(t,{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.activeCreature.queryMove(),a.isUpgraded()&&a._addOffenseBuff()}})},_highlightDestination:function(e){this.creature.tracePosition({x:e.x,y:e.y,overlayClass:"creature moveto selected player"+this.creature.team})},_addOffenseBuff:function(){this.creature;var e=new n.a("Momentum",this.creature,this.creature,"",{effectFn:function(e){e.deleteEffect()},alterations:{offense:25},deleteTrigger:"onStartPhase",turnLifetime:1},this.game);this.creature.addEffect(e)}},{trigger:"onQuery",_targetTeam:r.a.Ally,_maxTransferAmount:50,require:function(){return!!this.testRequirements()&&(this.creature.health<this._maxTransferAmount+1?(this.message="Not enough health",!1):!!this.atLeastOneTarget(this._getHexes(),{team:this._targetTeam,optTest:this._confirmTarget}))},query:function(){var t=this,a=this.creature;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},optTest:this._confirmTarget,team:this._targetTeam,id:a.id,flipped:a.flipped,hexes:this._getHexes()})},activate:function(t){this.end();var a=Math.min(t.stats.health-t.health,this._maxTransferAmount);if(t.heal(a,!1,!1),this.creature.heal(-a,!1,!1),this.game.log("%CreatureName".concat(this.creature.id,"% gives ").concat(a," health to %CreatureName").concat(t.id,"%")),this.isUpgraded()){var i=new n.a(this.title,this.creature,this.creature,"",{alterations:{regrowth:10}},e);this.creature.addEffect(i,"%CreatureName".concat(this.creature.id,"% gains 10 regrowth points"),"",!1,!0)}},_getHexes:function(){return this.creature.adjacentHexes(1)},_confirmTarget:function(e){return e.health<e.stats.health}}]}},989:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var i=a(3),r=a.n(i),s=a(4),n=a.n(s),h=a(0),c=a(5),u=function(){function e(t,a,i,s,n,c){r()(this,e),this.id=c.effectId++,this.game=c,this.name=t,this.owner=a,this.target=i,this.trigger=s,this.creationTurn=c.turn;var u=h.extend({requireFn:function(){return!0},effectFn:function(){},alterations:{},turnLifetime:0,deleteTrigger:"onStartOfRound",stackable:!0,noLog:!1,specialHint:void 0,deleteOnOwnerDeath:!1},n);h.extend(this,u),c.effects.push(this)}return n()(e,[{key:"animation",value:function(){this.activate.apply(this,arguments)}},{key:"activate",value:function(e){if(!this.requireFn(e))return!1;this.noLog||console.log("Effect "+this.name+" triggered"),e instanceof c.a&&e.addEffect(this),this.effectFn(this,e)}},{key:"deleteEffect",value:function(){var e=this.target.effects.indexOf(this);this.target.effects[e]?this.target.effects.splice(e,1):console.warn("Failed to find effect on target.",this);var t=this.game.effects.indexOf(this);this.game.effects[t]?this.game.effects.splice(t,1):console.warn("Failed to find effect on game.",this),this.target.updateAlteration()}}]),e}()}}]);